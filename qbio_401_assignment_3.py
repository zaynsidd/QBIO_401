# -*- coding: utf-8 -*-
"""QBIO_401_Assignment_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IsUGw_refRc0sO52Ox77tsp_HTY6LBVG

| Gene Name    | Chromosome number of gene | Chromosome number of best match in other species |
| -------- | ------- | ------- |
| Human gene 1  | 5    | Z    |
| Human gene 2  | 5    | Z    |
| Human gene 3  | 9    | Z    |
| Human gene 4  | 9    | Z    |
| Human gene 5  | X    |1    |
| Human gene 6  | X    | 1    |
| Human gene 7  | X    | 4    |
| Chicken gene 1  | 1   | 22    |
| Chicken gene 2  | 1   | X    |
| Chicken gene 3  | 1    | X    |
| Chicken gene 4  | 4    | X    |
| Chicken gene 5  | Z    | 5    |
| Chicken gene 6  | Z    | 9    |
| Chicken gene 7  | Z    | 5    |


I don't think that the chicken Z chromosome and human X chromosome are homologous, as the common genes are not found on corresponding sex chromosomes, but rather, different chromosomes.
"""

def loadFASTA(filename):
    '''Outputs a sequence string from the FASTA file named filename'''
    infile = open(filename) # opens the file
    seqlist = [] # empty list
    temp = infile.readline() # reads a single line
                             # we don't want the first line
                             # of the FASTA file ">..."
    for line in infile: # reads one line at a time
                        # when it gets to the end of the file it stops
        temp = line.replace("\n","") # removes \n
        temp = temp.replace("\r","") # removes \r too
        seqlist.append(temp)
    infile.close() # closes the file
    seq = "".join(seqlist) # combines the list into a string
    return seq

csw = loadFASTA("/content/codingcsw.txt")
PTPN11 = loadFASTA("/content/codingPTPN11.txt")

csw

import re

def lysine(seq):
  valid = False
  stop_codons = ['TGA','TAA','TAG']
  start = ['ATG', 'GTG', 'TTG']
  targets = ['AAA', 'AAG']
  result = re.findall(r'.{3}', seq)
  lysine_counts = {'AAA':0, 'AAG':0}
  for element in result:
    if (element in start) and (not valid):
      valid = True
      continue
    elif (element in stop_codons) and valid:
      valid = False
      continue
    if (element in targets) and valid:
      lysine_counts[element] += 1
  return lysine_counts

lysine(csw)

lysine(PTPN11)

print(len(csw)/3)
print(len(PTPN11)/3)

"""The codon frequency is quite different for the human and drosophila, with effectively flipped frequencies for AAA and AAG. The ratio frequencies are more extreme in our findings than on the website (The ratios being AAA:AAG)."""

